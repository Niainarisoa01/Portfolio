name: Deploy Portfolio

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Permet de dÃ©clencher manuellement le workflow

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run linting
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Node.js dependencies
        run: npm install
        
      - name: Build CSS with Tailwind
        run: npm run build
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Create .env file
        run: |
          echo "DEBUG=False" >> .env
          echo "SECRET_KEY=default_secret_key_for_ci" >> .env
          echo "MAIL_SERVER=smtp.gmail.com" >> .env
          echo "MAIL_PORT=587" >> .env
          echo "MAIL_USE_TLS=True" >> .env
          echo "MAIL_USERNAME=test@example.com" >> .env
          echo "MAIL_PASSWORD=password" >> .env
          echo "MAIL_DEFAULT_SENDER=test@example.com" >> .env
          
      - name: Update Procfile for Gunicorn
        run: |
          echo "web: gunicorn wsgi:app" > Procfile
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: portfolio-build
          path: .
          if-no-files-found: error
            
  deploy-railway:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: portfolio-build
          path: .
          
      - name: Deploy to Railway
        uses: docker://ghcr.io/railwayapp/cli:latest
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        with:
          args: up
          
  deploy-render:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: portfolio-build
          path: .
          
      - name: Deploy to Render
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" 